#!/usr/bin/env perl6




use v6;
use File::Presence;
use TXN::Remarshal;




# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------

sub MAIN(
    Str :i(:$input),
    Str :o(:$output),
    Str :if(:$input-format),
    Str :of(:$output-format)
)
{
    my Str $content = do given $input
    {
        when '-'
        {
            $*IN.lines.join("\n");
        }
        when Str:D
        {
            die unless exists-readable-file($_);
            .IO.slurp;
        }
        default
        {
            $*IN.lines.join("\n");
        }
    }

    my Str $remarshal = remarshal($content, :$input-format, :$output-format);

    given $output
    {
        when '-'
        {
            say $remarshal.trim;
        }
        when Str:D
        {
            .IO.spurt($remarshal, :createonly);
        }
        default
        {
            say $remarshal.trim;
        }
    }
}




# -----------------------------------------------------------------------------
# usage
# -----------------------------------------------------------------------------

sub USAGE()
{
    constant $HELP = q:to/EOF/;
    Usage:
      txn-remarshal [-i=<file>] [-o=<file>] -if=<format> -of=<format>

    Options:
      -h, --help
        print this help message
      -i, --input=<file>
        the input source
      -o, --output=<file>
        the output destination
      -if, --input-format=<format>
        the input file format
      -of, --output-format=<format>
        the output file format

    Files:
      /path/to/file
        absolute path to input/output file
      path/to/file
        relative path to input/output file
      -
        stdin/stdout

    Formats:
      json
        JSON
      txn
        TXN
    EOF
    say $HELP.trim;
}

# vim: set filetype=perl6 foldmethod=marker foldlevel=0:
